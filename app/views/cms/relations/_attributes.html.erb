<div class="relationAttributes">
  <% relation_attributes = relation.relationAttributes %>
  <%= f.fields_for :relationAttributes, relation_attributes do |c| %>
    <% relation.meta.attributes[:mdAttributes].group_by { |a| a.options.has_key?(:category) ? a.options[:category] : 'Attributes' }.sort.each do |category, attribute_list| %>
      <div class="category">
        <div class="name"><%= category.split('.').last %></div>
        <% attribute_list.sort_by { |a| a.options.has_key?(:order) ? a.options[:order] : 999 }.each do |a| %>
          <div class="control-group">
            <% pattern         = a.options[:pattern]
               required        = a.isMandatory ? true : nil
               attribute_value = relation_attributes.send(a.attributeName)
               placeholder     = a.isMandatory && attribute_value.blank? ? 'this field is required' : nil
               field_type      = a.options.has_key?(:form) ? a.options[:form][:field] : '' %>
            <%= c.label a.attributeName, a.description + (required ? '*' : ''), :class => 'control-label' %>
            <div class="controls" editable="<%= (!(relation.respond_to?(:ciRelationId) && relation.ciRelationId.to_i > 0 && a.options.has_key?(:editable) && !a.options[:editable])) %>">
              <% case field_type %>
              <% when 'textarea' %>
                <%= c.text_area a.attributeName, :class => 'input-xlarge text', :required => required, :placeholder => placeholder, :pattern => pattern %>
              <% when 'checkbox' %>
                <% if a.options[:form][:multiple] == 'true' %>
                  <%= render 'cms/cis/multiselect',
                             :attribute_name     => a.attributeName,
                             :attribute_value    => attribute_value,
                             :options_for_select => a.options[:form][:options_for_select],
                             :builder            => c %>
                <% else %>
                  <%= render 'cms/cis/checkbox',
                             :attribute_name  => a.attributeName,
                             :attribute_value => attribute_value,
                             :builder         => c %>
                <% end %>
              <% when 'select' %>
                <%= c.select a.attributeName, options_for_select(a.options[:form][:options_for_select], attribute_value) %>
              <% else %>
                <%= c.text_field a.attributeName, :class => 'input-xlarge', :required => required, :placeholder => placeholder, :pattern => pattern %>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>
  <% end %>
</div>
